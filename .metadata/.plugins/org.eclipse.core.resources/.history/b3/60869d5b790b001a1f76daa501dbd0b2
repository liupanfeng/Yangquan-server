<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yangquan.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yangquan.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="token_id" property="tokenId" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="photo_url" property="photoUrl" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="user_card_id_url" property="userCardIdUrl" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="star" property="star" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="start_work" property="startWork" jdbcType="DATE" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="business_license_url" property="businessLicenseUrl" jdbcType="VARCHAR" />
    <result column="agent_brand" property="agentBrand" jdbcType="VARCHAR" />
    <result column="quali_upload_url" property="qualiUploadUrl" jdbcType="VARCHAR" />
    <result column="car_pic_url" property="carPicUrl" jdbcType="VARCHAR" />
    <result column="mine_pic_url" property="minePicUrl" jdbcType="VARCHAR" />
    <result column="num_player" property="numPlayer" jdbcType="INTEGER" />
    <result column="docking_finance" property="dockingFinance" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yangquan.pojo.User" extends="BaseResultMap" >
    <result column="autograph" property="autograph" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, token_id, phone_number, nickname, photo_url, user_type, user_card_id_url, 
    sex, star, birthday, start_work, number, address, business_license_url, agent_brand, 
    quali_upload_url, car_pic_url, mine_pic_url, num_player, docking_finance, create_time
  </sql>
  <sql id="Blob_Column_List" >
    autograph
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yangquan.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yangquan.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yangquan.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yangquan.pojo.User" >
    insert into user (id, user_id, token_id, 
      phone_number, nickname, photo_url, 
      user_type, user_card_id_url, sex, 
      star, birthday, start_work, 
      number, address, business_license_url, 
      agent_brand, quali_upload_url, car_pic_url, 
      mine_pic_url, num_player, docking_finance, 
      create_time, autograph)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{tokenId,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{photoUrl,jdbcType=VARCHAR}, 
      #{userType,jdbcType=INTEGER}, #{userCardIdUrl,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{star,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{startWork,jdbcType=DATE}, 
      #{number,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{businessLicenseUrl,jdbcType=VARCHAR}, 
      #{agentBrand,jdbcType=VARCHAR}, #{qualiUploadUrl,jdbcType=VARCHAR}, #{carPicUrl,jdbcType=VARCHAR}, 
      #{minePicUrl,jdbcType=VARCHAR}, #{numPlayer,jdbcType=INTEGER}, #{dockingFinance,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{autograph,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yangquan.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="tokenId != null" >
        token_id,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="photoUrl != null" >
        photo_url,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="userCardIdUrl != null" >
        user_card_id_url,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="star != null" >
        star,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="startWork != null" >
        start_work,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="businessLicenseUrl != null" >
        business_license_url,
      </if>
      <if test="agentBrand != null" >
        agent_brand,
      </if>
      <if test="qualiUploadUrl != null" >
        quali_upload_url,
      </if>
      <if test="carPicUrl != null" >
        car_pic_url,
      </if>
      <if test="minePicUrl != null" >
        mine_pic_url,
      </if>
      <if test="numPlayer != null" >
        num_player,
      </if>
      <if test="dockingFinance != null" >
        docking_finance,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="autograph != null" >
        autograph,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="tokenId != null" >
        #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="userCardIdUrl != null" >
        #{userCardIdUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="star != null" >
        #{star,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="startWork != null" >
        #{startWork,jdbcType=DATE},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseUrl != null" >
        #{businessLicenseUrl,jdbcType=VARCHAR},
      </if>
      <if test="agentBrand != null" >
        #{agentBrand,jdbcType=VARCHAR},
      </if>
      <if test="qualiUploadUrl != null" >
        #{qualiUploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="carPicUrl != null" >
        #{carPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="minePicUrl != null" >
        #{minePicUrl,jdbcType=VARCHAR},
      </if>
      <if test="numPlayer != null" >
        #{numPlayer,jdbcType=INTEGER},
      </if>
      <if test="dockingFinance != null" >
        #{dockingFinance,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="autograph != null" >
        #{autograph,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yangquan.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.tokenId != null" >
        token_id = #{record.tokenId,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.photoUrl != null" >
        photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.userCardIdUrl != null" >
        user_card_id_url = #{record.userCardIdUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.star != null" >
        star = #{record.star,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.startWork != null" >
        start_work = #{record.startWork,jdbcType=DATE},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicenseUrl != null" >
        business_license_url = #{record.businessLicenseUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.agentBrand != null" >
        agent_brand = #{record.agentBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.qualiUploadUrl != null" >
        quali_upload_url = #{record.qualiUploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.carPicUrl != null" >
        car_pic_url = #{record.carPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.minePicUrl != null" >
        mine_pic_url = #{record.minePicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.numPlayer != null" >
        num_player = #{record.numPlayer,jdbcType=INTEGER},
      </if>
      <if test="record.dockingFinance != null" >
        docking_finance = #{record.dockingFinance,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.autograph != null" >
        autograph = #{record.autograph,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      token_id = #{record.tokenId,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      user_card_id_url = #{record.userCardIdUrl,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      star = #{record.star,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      start_work = #{record.startWork,jdbcType=DATE},
      number = #{record.number,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      business_license_url = #{record.businessLicenseUrl,jdbcType=VARCHAR},
      agent_brand = #{record.agentBrand,jdbcType=VARCHAR},
      quali_upload_url = #{record.qualiUploadUrl,jdbcType=VARCHAR},
      car_pic_url = #{record.carPicUrl,jdbcType=VARCHAR},
      mine_pic_url = #{record.minePicUrl,jdbcType=VARCHAR},
      num_player = #{record.numPlayer,jdbcType=INTEGER},
      docking_finance = #{record.dockingFinance,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      autograph = #{record.autograph,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      token_id = #{record.tokenId,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      user_card_id_url = #{record.userCardIdUrl,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      star = #{record.star,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      start_work = #{record.startWork,jdbcType=DATE},
      number = #{record.number,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      business_license_url = #{record.businessLicenseUrl,jdbcType=VARCHAR},
      agent_brand = #{record.agentBrand,jdbcType=VARCHAR},
      quali_upload_url = #{record.qualiUploadUrl,jdbcType=VARCHAR},
      car_pic_url = #{record.carPicUrl,jdbcType=VARCHAR},
      mine_pic_url = #{record.minePicUrl,jdbcType=VARCHAR},
      num_player = #{record.numPlayer,jdbcType=INTEGER},
      docking_finance = #{record.dockingFinance,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yangquan.pojo.User" >
    update user
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="tokenId != null" >
        token_id = #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        photo_url = #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="userCardIdUrl != null" >
        user_card_id_url = #{userCardIdUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="star != null" >
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="startWork != null" >
        start_work = #{startWork,jdbcType=DATE},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="businessLicenseUrl != null" >
        business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
      </if>
      <if test="agentBrand != null" >
        agent_brand = #{agentBrand,jdbcType=VARCHAR},
      </if>
      <if test="qualiUploadUrl != null" >
        quali_upload_url = #{qualiUploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="carPicUrl != null" >
        car_pic_url = #{carPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="minePicUrl != null" >
        mine_pic_url = #{minePicUrl,jdbcType=VARCHAR},
      </if>
      <if test="numPlayer != null" >
        num_player = #{numPlayer,jdbcType=INTEGER},
      </if>
      <if test="dockingFinance != null" >
        docking_finance = #{dockingFinance,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="autograph != null" >
        autograph = #{autograph,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yangquan.pojo.User" >
    update user
    set user_id = #{userId,jdbcType=BIGINT},
      token_id = #{tokenId,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      user_card_id_url = #{userCardIdUrl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      start_work = #{startWork,jdbcType=DATE},
      number = #{number,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
      agent_brand = #{agentBrand,jdbcType=VARCHAR},
      quali_upload_url = #{qualiUploadUrl,jdbcType=VARCHAR},
      car_pic_url = #{carPicUrl,jdbcType=VARCHAR},
      mine_pic_url = #{minePicUrl,jdbcType=VARCHAR},
      num_player = #{numPlayer,jdbcType=INTEGER},
      docking_finance = #{dockingFinance,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      autograph = #{autograph,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yangquan.pojo.User" >
    update user
    set user_id = #{userId,jdbcType=BIGINT},
      token_id = #{tokenId,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      user_card_id_url = #{userCardIdUrl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      start_work = #{startWork,jdbcType=DATE},
      number = #{number,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
      agent_brand = #{agentBrand,jdbcType=VARCHAR},
      quali_upload_url = #{qualiUploadUrl,jdbcType=VARCHAR},
      car_pic_url = #{carPicUrl,jdbcType=VARCHAR},
      mine_pic_url = #{minePicUrl,jdbcType=VARCHAR},
      num_player = #{numPlayer,jdbcType=INTEGER},
      docking_finance = #{dockingFinance,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>